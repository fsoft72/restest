#!/usr/bin/env python3
#
# restest
#
# written by Fabio Rotondo <fabio.rotondo@gmail.com>
#

VERSION = "1.50"

import argparse, sys

from lib.parser import RESTestParser
from lib.postman_exp import PostmanExporter

parser = argparse.ArgumentParser ( description = "RESTest v%s the easy REST test manager - by Fabio Rotondo (fabio.rotondo@gmail.com)" % VERSION )

parser.add_argument ( "file", nargs = '+', help="Files containing the tests" )
parser.add_argument ( "--base-url", type=str, help = "Base URL. This string overrides the 'system' parameter in JSON file" )
parser.add_argument ( "--dont-stop-on-error", action="store_true", help = "Flag to stop RESTest on error. This flag overrides the 'system' parameter in JSON file" )
parser.add_argument ( "--postman", type=str, help="Export activity to a Postman JSON file" )
parser.add_argument ( "--postman-name", type=str, help="The Postman Collection name" )
parser.add_argument ( "--postman-base-url", type=str, help="The base url to use in Postman instead of the real host" )
parser.add_argument ( "--log", type=str, help = "Custom log file overriding the one in 'system'" )
parser.add_argument ( "--key", type=str, nargs='+', help="One or more keys to be added to the globals dict use key:value format" )
parser.add_argument ( "--quiet", action="store_true", help = "If set, no output on console" )
parser.add_argument ( "--version", action="version", version=VERSION )


args = parser.parse_args ()

postman = None
if args.postman:
	postman = PostmanExporter ( args.postman, args.postman_name, args.postman_base_url )

rt = RESTestParser ( quiet = args.quiet, base_url = args.base_url, stop_on_error = not args.dont_stop_on_error, log_file = args.log, postman = postman )

if args.key:
	for c in args.key:
		k, v = c.split ( ":" )
		rt.rt.globals [ k ] = v

for f in args.file:
	rt.open ( f )

if postman: postman.save ()

print ( "\n\n===== FINISHED. Total Errors: %s / %s" % ( rt.rt._errors, rt.rt._tests ) )